apply plugin: 'com.android.application'

def globalConfiguration = rootProject.ext
def presentationDependencies = globalConfiguration.dependencies

def keyStorePath_ = keyStorePath
def storePassword_ = storePassword
def keyAlias_ = keyAlias
def keyPassword_ = keyPassword
def storeFile_ = file(keyStorePath_)

static def buildTime() {
    return new Date().format("yyyy-MM-dd HH:mm:ss")
}

android {
    compileSdkVersion globalConfiguration["compileSdkVersion"]
    buildToolsVersion globalConfiguration["buildToolsVersion"]
    defaultConfig {
        applicationId defaultApplicationId
        minSdkVersion globalConfiguration["minSdkVersion"]
        targetSdkVersion globalConfiguration["targetSdkVersion"]
        versionCode globalConfiguration["versionCode"]
        versionName globalConfiguration["versionName"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "buildTime", "\"" + buildTime() + "\""
        ndk {
            abiFilters "armeabi"
        }
    }
    signingConfigs {
        debug {
            storeFile storeFile_
            storePassword storePassword_
            keyAlias keyAlias_
            keyPassword keyPassword_
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            storeFile storeFile_
            storePassword storePassword_
            keyAlias keyAlias_
            keyPassword keyPassword_
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "isRelease", "false"
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "boolean", "isRelease", "true"
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    applicationVariants.all { variant ->
        def buildType = variant.buildType.name
        def flavorName = variant.flavorName
        def createTime = new Date().format("YYYY-MM-dd_HH_mm_ss", TimeZone.getTimeZone("GMT+08:00"))
        variant.outputs.all {
            outputFileName = flavorName + "_" + buildType + "_v" + defaultConfig.versionName + "_" + createTime + ".apk"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation presentationDependencies.appcompatV7
    implementation presentationDependencies.constraintLayout
    implementation presentationDependencies.design
    testImplementation presentationDependencies.junit
    androidTestImplementation presentationDependencies.testRunner
    androidTestImplementation presentationDependencies.espressoCore
    implementation presentationDependencies.qmuiteam
    implementation presentationDependencies.butterknife
    annotationProcessor presentationDependencies.butterknifeCompiler
    implementation presentationDependencies.lifecycleExtensions
    debugImplementation presentationDependencies.leakcanary
    releaseImplementation presentationDependencies.leakcanaryAndroidNoOp
    debugImplementation presentationDependencies.leakcanarySupportFragment
    implementation presentationDependencies.crashreportUpgrade
    implementation project(':presenter')
    implementation project(':common')
}